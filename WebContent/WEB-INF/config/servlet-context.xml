<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jee="http://www.springframework.org/schema/jee" 
       xmlns:lang="http://www.springframework.org/schema/lang"
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
    
    <!-- Разрешаем использование аннотаций Spring MVC (то есть @Controller и.т.д) -->
    <mvc:annotation-driven />
    <!-- Всю статику (изображения, css-файлы, javascript) положим в папку webapp/resources 
    и замаппим их на урл вида /resources/** -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <!-- Отображение видов на jsp-файлы, лежащие в папке /WEB-INF/views -->
    <!--    <bean
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
    </bean>-->
    
    <bean id="viewResolver" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver">
        <property name="requestContextAttribute" value="requestContext"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
    </bean>
    
<!--    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="defaultContentType" value="text/html"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="favorPathExtension" value="true"/>
        <property name="order" value="1"/>
                <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="json" value="application/json"/>
            </map>
        </property>
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="html" value="text/html"/>
                                <entry key="json" value="application/json"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>
        <property name="viewResolvers">
            <list>
                 Use tiles3 for views 
                <bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" />     
                <bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">               
                                    <property name="requestContextAttribute" value="requestContext"/>
                <property name="contentType" value="text/html" />
                <property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
                </bean>
                <bean class="view.JsonViewResolver"/>    
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />             
            </list>
        </property>
        <property name="defaultViews">
            <list>
                                <ref bean="jsonView"/>
                <bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
                    <property name="contentType" value="application/json;charset=UTF-8"/>
                    <property name="disableCaching" value="false"/>
                    <property name="extractValueFromSingleKeyModel" value="true"/>
                </bean>
                <bean id="htmlView" class="org.springframework.web.servlet.view.tiles3.TilesView">
                    <property name="contentType" value="text/html;charset=UTF-8"/>
                    <property name="url" value="org.springframework.web.servlet.view.AbstractUrlBasedView.DEFAULT_CONTENT_TYPE"/>
                </bean>
            </list>
        </property>
    </bean>-->
 
    <bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
        <property name="definitions" value="/WEB-INF/config/tiles/tiles-templates.xml" />
        <property name="preparerFactoryClass" value="org.springframework.web.servlet.view.tiles3.SimpleSpringPreparerFactory "/>        
    </bean>
    
    <!--  БИН Валидатор -->
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    
    <!-- Файл с настройками контроллеров -->
    <import resource="controllers.xml" />
        
    <bean id="messageSource"
          class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <property name="basename" value="classpath:messages" />
        <property name="defaultEncoding" value="UTF-8"/>
    </bean>
 
    <bean id="localeChangeInterceptor"
          class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
        <property name="paramName" value="lang" />
    </bean>
 
    <bean id="localeResolver"
          class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
        <property name="defaultLocale" value="ru"/>
    </bean>
 
    <bean id="handlerMapping"
          class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping">
        <property name="interceptors">
            <ref bean="localeChangeInterceptor" />
        </property>
    </bean>
        
    <mvc:interceptors>
        <!-- Changes the locale when a 'locale' request parameter is sent; e.g. /?locale=ru -->                 
        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
            <property name="paramName" value="lang" />
        </bean>
        
        <bean name="openSessionInViewInterceptor" class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory" ref="sessionFactoryPostgres" />
        </bean>
        <bean name="openSessionInViewInterceptor2" class="org.springframework.orm.hibernate4.support.OpenSessionInViewInterceptor">
            <property name="sessionFactory" ref="sessionFactoryMssql" />
        </bean>
    </mvc:interceptors>
	
    
</beans>
